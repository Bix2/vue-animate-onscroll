var ScrollAnimate=()=>{const e=e=>"string"==typeof e,t=(e,t,i="")=>e.className=`${t} ${i}`;return{isInView:({top:e,bottom:t})=>e<(()=>document.documentElement.clientHeight)()&&t>0,run(i,{value:r,modifiers:s},{isUpwards:n,previousClassName:l=""}){if(!this.isInView(i.getBoundingClientRect()))return s.repeat&&e(r)?t(i,l):void 0;if(e(r))return t(i,l,r);if(s.repeat||(e=>e.down&&e.up)(r)||!((e="",t="")=>e.trim()!==t.trim())(i.className,l)){const e=n?r.up:r.down;return t(i,l,e)}return(({params:e,isUpwards:t,repeat:i})=>i&&(t&&e.down||!t&&e.up))({params:r,isUpwards:n,...s})?t(i,l):void 0}}},index={ScrollAnimate:ScrollAnimate,install(e){let t;e.directive("animate-onscroll",{bind(e,i){t=ScrollAnimate()},inserted(e,i){const r=e.className;window.addEventListener("scroll",function(){const s=this.oldScroll>this.scrollY;t.run(e,i,{isUpwards:s,previousClassName:r}),this.oldScroll=this.scrollY})}})}};export default index;
